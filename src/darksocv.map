
Allocating common symbols
Common symbol       size              file

io                  0x10              io.o

Memory Configuration

Name             Origin             Length             Attributes
IO               0x0000000080000000 0x0000000000000010 rw !x
MEM              0x0000000000000000 0x0000000000002000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map


.text           0x0000000000000000      0xdac
 *(.boot)
 .boot          0x0000000000000000       0xb4 boot.o
                0x000000000000006c                check4rv32i
                0x000000000000007c                set_mtvec
                0x0000000000000084                set_mepc
                0x000000000000008c                set_mie
                0x0000000000000094                get_mtvec
                0x000000000000009c                get_mepc
                0x00000000000000a4                get_mie
                0x00000000000000ac                get_mip
 *(.text)
 .text          0x00000000000000b4       0xbc io.o
                0x00000000000000b4                board_name
 .text          0x0000000000000170       0xa8 main.o
                0x0000000000000170                irq_handler
 .text          0x0000000000000218      0xaac stdio.o
                0x00000000000002f8                getchar
                0x000000000000031c                putchar
                0x0000000000000378                gets
                0x0000000000000470                putstr
                0x00000000000004e8                puts
                0x000000000000054c                putnum
                0x00000000000006ec                printf
                0x0000000000000868                strncmp
                0x00000000000008b4                strcmp
                0x00000000000008f4                strlen
                0x000000000000091c                strtok
                0x0000000000000a14                memcpy
                0x0000000000000a38                memset
                0x0000000000000a58                atoi
                0x0000000000000ab4                xtoi
                0x0000000000000afc                mac
                0x0000000000000b04                __umulsi3
                0x0000000000000b3c                __mulsi3
                0x0000000000000bc0                __udiv_umod_si3
                0x0000000000000bd0                __udivsi3
                0x0000000000000be4                __umodsi3
                0x0000000000000bf8                __div_mod_si3
                0x0000000000000c08                __divsi3
                0x0000000000000c1c                __modsi3
                0x0000000000000c30                usleep
 .text          0x0000000000000cc4       0xe8 banner.o
                0x0000000000000cc4                banner
 .text          0x0000000000000dac        0x0 boot.o

.text.startup   0x0000000000000dac      0x720
 .text.startup  0x0000000000000dac      0x720 main.o
                0x0000000000000dac                main

.rela.dyn       0x00000000000014cc        0x0
 .rela.text     0x00000000000014cc        0x0 io.o
 .rela.text.startup
                0x00000000000014cc        0x0 io.o

.data           0x00000000000014cc      0x5d8
 *(.rodata*)
 .rodata.str1.4
                0x00000000000014cc       0xfc io.o
 .rodata.str1.4
                0x00000000000015c8      0x370 main.o
                                        0x37c (size before relaxing)
 .rodata.str1.4
                0x0000000000001938       0x19 stdio.o
 *fill*         0x0000000000001951        0x3 
 .rodata.str1.4
                0x0000000000001954      0x110 banner.o
                                        0x10d (size before relaxing)
 .rodata        0x0000000000001a64       0x31 boot.o
 *(.data)
 .data          0x0000000000001a95        0x0 io.o
 .data          0x0000000000001a95        0x0 main.o
 .data          0x0000000000001a95        0x0 stdio.o
 .data          0x0000000000001a95        0x0 banner.o
 .data          0x0000000000001a95        0x0 boot.o
                0x0000000000002295                _global = (. + 0x800)
 *(.sbss)
 *fill*         0x0000000000001a95        0x3 
 .sbss          0x0000000000001a98        0x8 io.o
                0x0000000000001a98                utimers
                0x0000000000001a9c                threads
 .sbss          0x0000000000001aa0        0x4 stdio.o
 *(.bss)
 .bss           0x0000000000001aa4        0x0 io.o
 .bss           0x0000000000001aa4        0x0 main.o
 .bss           0x0000000000001aa4        0x0 stdio.o
 .bss           0x0000000000001aa4        0x0 banner.o
 .bss           0x0000000000001aa4        0x0 boot.o
                0x0000000000001aa4                _heap = .
                0x0000000000002000                PROVIDE (_stack = (ORIGIN (MEM) + LENGTH (MEM)))

.sdata          0x0000000000001aa4        0x4
 .sdata         0x0000000000001aa4        0x4 main.o
                0x0000000000001aa4                heapcheck

.io             0x0000000080000000       0x10
 io.o(COMMON)
 COMMON         0x0000000080000000       0x10 io.o
                0x0000000080000000                io
LOAD main.o
LOAD stdio.o
LOAD io.o
LOAD banner.o
LOAD boot.o
OUTPUT(darksocv.o elf32-littleriscv)

.comment        0x0000000000000000       0x29
 .comment       0x0000000000000000       0x29 io.o
                                         0x2a (size before relaxing)
 .comment       0x0000000000000029       0x2a main.o
 .comment       0x0000000000000029       0x2a stdio.o
 .comment       0x0000000000000029       0x2a banner.o
